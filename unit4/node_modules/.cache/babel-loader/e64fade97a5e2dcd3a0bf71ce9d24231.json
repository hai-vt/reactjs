{"ast":null,"code":"import _classCallCheck from \"/var/www/html/reactjs/unit4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/reactjs/unit4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/reactjs/unit4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/reactjs/unit4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/reactjs/unit4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/reactjs/unit4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/reactjs/unit4/src/components/Todoform/Todoform.js\";\nimport React from 'react';\n\nvar TodoForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoForm, _React$Component);\n\n  function TodoForm(props) {\n    var _this;\n\n    _classCallCheck(this, TodoForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoForm).call(this, props));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TodoForm, [{\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      event.preventDefault();\n      var newItem = this.refs.itemName.value;\n\n      if (newItem) {\n        this.props.addItem(newItem);\n        this.refs.form.reset();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        href: \"form\",\n        onsubmit: this.onSubmit,\n        className: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"itemName\",\n        className: \"form-control\",\n        placeholder: \"Add new to do ...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Add\"));\n    }\n  }]);\n\n  return TodoForm;\n}(React.Component);\n\nexport { TodoForm as default };","map":{"version":3,"sources":["/var/www/html/reactjs/unit4/src/components/Todoform/Todoform.js"],"names":["React","TodoForm","props","onSubmit","bind","event","preventDefault","newItem","refs","itemName","value","addItem","form","reset","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,Q;;;;;AACjB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AAEA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AAHe;AAIlB;;;;6BAEQC,K,EAAO;AACZA,MAAAA,KAAK,CAACC,cAAN;AAEA,UAAIC,OAAO,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,KAAjC;;AACA,UAAGH,OAAH,EAAY;AACR,aAAKL,KAAL,CAAWS,OAAX,CAAmBJ,OAAnB;AACA,aAAKC,IAAL,CAAUI,IAAV,CAAeC,KAAf;AACH;AACJ;;;6BAES;AACN,aACI;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,QAAQ,EAAE,KAAKV,QAAjC;AAA2C,QAAA,SAAS,EAAC,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAC,UAAvB;AAAkC,QAAA,SAAS,EAAC,cAA5C;AAA2D,QAAA,WAAW,EAAC,mBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ;AAMH;;;;EAxBiCH,KAAK,CAACc,S;;SAAvBb,Q","sourcesContent":["import React from 'react';\n\nexport default class TodoForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n\n        var newItem = this.refs.itemName.value;\n        if(newItem) {\n            this.props.addItem(newItem);\n            this.refs.form.reset();\n        }\n    }\n\n    render () {\n        return (\n            <form href=\"form\" onsubmit={this.onSubmit} className=\"form-inline\">\n                <input type=\"text\" ref=\"itemName\" className=\"form-control\" placeholder=\"Add new to do ...\" />\n                <button className=\"btn btn-primary\">Add</button>\n            </form>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}