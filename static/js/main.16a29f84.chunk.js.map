{"version":3,"sources":["public/images/avartar_image.png","Blogs/About/AboutMe.js","Blogs/Blog/BlogList.js","Blogs/Contact/ContactMe.js","Blogs/Header/Header.js","Blogs/Home/Home.js","Blogs/Index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AboutMe","react_default","a","createElement","className","src","avartar","alt","Component","BlogList","ContactMe","Header","Link","to","Home","Index","BrowserRouter","Header_Header","Home_Home","Route","path","component","App","Index_Index","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8SCGnBC,mLAEb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAQH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAASC,IAAI,aAC9CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,eACRH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,UACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,eACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAhB,sBAXyBI,aCDhBC,mLAEb,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,UAERH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,UAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,UAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,UAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,kBAZ8BI,aCAjBE,mLAEb,OACIT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,2CAH2BI,aCKlBG,0LAEb,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,WAAT,aAEJZ,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,UAAT,SAEIZ,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,aAAT,yBAbwBL,cCHfM,mLAEb,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,+BAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,2BAC4BH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,WAAT,uBATVL,aCKbO,0LAEb,OACId,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACAf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAD,MAEAjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWrB,IACjCC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWZ,IAChCR,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWX,aAVZF,cCgBpBc,mLARX,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACoB,EAAD,cAJQf,aCHEgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.16a29f84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avartar_image.f042cfa9.png\";","import React, { Component } from 'react';\nimport avartar from '../../public/images/avartar_image.png';\n\nexport default class AboutMe extends Component {\n    render() {\n        return(\n            <div className=\"aboutme\">\n            <div className=\"aboutme-top\">\n            <div className=\"image\"><img src={avartar} alt=\"avartar\" /></div>\n            <div className=\"info\">\n            <ul>\n            <li><span className=\"fullname\">Vu Thi Hai</span></li>\n        <li><span className=\"shortname\">haivt</span></li>\n        <li><span className=\"date-of-birth\">04-01-1987</span></li>\n        <li><span className=\"gender\">Female</span></li>\n        </ul>\n        </div>\n        </div>\n        </div>\n    )\n    }\n}","import React, { Component } from 'react';\n\nexport default class BlogList extends Component {\n    render() {\n        return(\n            <div className=\"blog-list\">\n                <div className=\"item\">Item 1\n                </div>\n        <div className=\"item\">Item 2\n        </div>\n        <div className=\"item\">Item 3\n        </div>\n        <div className=\"item\">Item 4\n        </div>\n        <div className=\"item\">Item 5\n        </div>\n            </div>\n    )\n    }\n}","import React, { Component } from 'react';\n\nexport default class ContactMe extends Component {\n    render() {\n        return(\n            <div className=\"contact-form\">\n            will create form contact in here\n        </div>\n    )\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport AboutMe from '../About/AboutMe';\nimport BlogList from '../Blog/BlogList';\nimport ContactMe from '../Contact/ContactMe';\nimport './header.css';\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n            <nav className=\"nav\">\n            <ul>\n            <li>\n            <Link to=\"/about/\">About Me</Link>\n        </li>\n        <li>\n        <Link to=\"/blog/\">Blog</Link>\n            </li>\n            <li>\n            <Link to=\"/contact/\">Contact Me</Link>\n        </li>\n        </ul>\n        </nav>\n        </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport AboutMe from '../About/AboutMe';\n\nexport default class Home extends Component {\n    render () {\n        return (\n            <div className=\"home-content\">\n                <div className=\"welcome\">Hello every one</div>\n                <div className=\"introduce\">\n                    I am Hai, I am from VietNam\n                </div>\n                <div className=\"link\">\n                    For more details please <Link to=\"/about/\">click here</Link>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport AboutMe from './About/AboutMe';\nimport BlogList from './Blog/BlogList';\nimport ContactMe from './Contact/ContactMe';\nimport './index.css';\n\nexport default class Index extends Component {\n    render() {\n        return (\n            <Router>\n            <div className=\"main-container\">\n            <Header />\n            <Home />\n\n            <Route path=\"/about/\" component={AboutMe} />\n            <Route path=\"/blog/\" component={BlogList} />\n            <Route path=\"/contact/\" component={ContactMe} />\n            </div>\n            </Router>\n    );\n    }\n}","import React, { Component } from 'react';\n/*import 'bootstrap/dist/css/bootstrap.min.css';*/\n/*import Header from './shopstack/header/header';\nimport Banner from './shopstack/banner/banner';\nimport Contactus from './shopstack/contactus/contactus';\nimport Services from './shopstack/services/services';\nimport Aboutus from './shopstack/aboutus/aboutus';\nimport Abouttean from './shopstack/aboutteam/aboutteam';\nimport Ourwork from './shopstack/ourwork/ourwork';\nimport Ourclients from './shopstack/ourclients/ourclients';\nimport Footer from './shopstack/footer/footer';*/\n/*import TodoForm from './components/Todoform/Todoform';\nimport './App.css';*/\nimport Index from './Blogs/Index';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Index />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}